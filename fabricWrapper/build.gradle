import groovy.json.JsonBuilder

plugins {
    id("java-library")
    id("maven-publish")
}

archivesBaseName("${project.mod_archives_base_name}")
group(project.mod_maven_group)
sourceCompatibility(JavaVersion.VERSION_1_8)
targetCompatibility(JavaVersion.VERSION_1_8)
version(project.parent.version)

def fabric_subprojects = project.parent.subprojects.findAll({
    it.name != "fabricWrapper"
})

fabric_subprojects.collect {
    evaluationDependsOn(":${it.name}")
}

jar {
    // disable cache
    outputs.upToDateWhen { false }

    dependsOn(fabric_subprojects.collect {
        it.tasks.remapJar
    })

    doFirst {
        delete fileTree("build/tmp/submods/META-INF/jars")

        copy {
            from {
                fabric_subprojects.collect {
                    it.remapJar.outputs.files
                }
            }

            into("build/tmp/submods/META-INF/jars")
        }
    }

    from("${rootDir}/LICENSE")
    from("build/tmp/submods")
}

processResources {
    // disable cache
    outputs.upToDateWhen { false }
    var jars = []

    fabric_subprojects.each({
        jars.add(["file": "META-INF/jars/${project.mod_archives_base_name}-${it.minecraft_version}-${project.version}.jar"])
    })

    from("${rootDir}/icon.png") {
        into("assets/${project.mod_id}")
    }

    filesMatching("fabric.mod.json") {
        expand([
                "magiclib_dependency": project.magiclib_dependency,
                "mod_description"    : project.mod_description,
                "mod_homepage"       : project.mod_homepage,
                "mod_id"             : project.mod_id,
                "mod_license"        : project.mod_license,
                "mod_name"           : project.mod_name,
                "mod_version"        : project.version,
                "mod_sources"        : project.mod_sources,
                "sub_jars"           : new JsonBuilder(jars).toPrettyString(),
        ])
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId("${project.mod_id}")
            version("${project.version}")
            from(components.java)
        }
    }

    repositories {
        mavenLocal()

        maven {
            url("$rootDir/publish")
        }
    }
}
